basePath: /api
definitions:
  handlers.Data:
    properties:
      firstname:
        type: string
      lastname:
        type: string
    type: object
  handlers.ResponseHTTP:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
info:
  contact:
    email: contact@mattrybin.com
    name: Matt Rybin
  description: This is an API for PeacefulParenting.ai
  title: PeacefulParenting API
  version: "1.0"
paths:
  /v1/questions:
    get:
      consumes:
      - application/json
      description: Get all questions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Data'
        "301":
          description: Moved Permanently
          schema:
            $ref: '#/definitions/handlers.ResponseHTTP'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ResponseHTTP'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ResponseHTTP'
      summary: Get all questions
      tags:
      - Questions
    post:
      consumes:
      - application/json
      description: Create question
      parameters:
      - description: Register book
        in: body
        name: question
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/handlers.Data'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ResponseHTTP'
      summary: Create a new question
      tags:
      - Questions
  /v1/questions/{question_id}:
    delete:
      consumes:
      - application/json
      description: Remove question by ID
      parameters:
      - description: Question ID
        in: path
        name: question_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ResponseHTTP'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ResponseHTTP'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/handlers.ResponseHTTP'
      summary: Remove question by ID
      tags:
      - Questions
    get:
      consumes:
      - application/json
      description: Get question by ID
      parameters:
      - description: Question ID
        in: path
        name: question_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/handlers.Data'
                  type: array
              type: object
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/handlers.ResponseHTTP'
      summary: Get question by ID
      tags:
      - Questions
swagger: "2.0"
